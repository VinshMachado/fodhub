import mongoose, { Schema, model, mongo } from "mongoose";

const collection = mongoose.Schema({
  username: {
    type: mongoose.Schema.Types.String,
    required: true,
    unique: true,
  },
  password: {
    type: String,
    required: true,
  },
  email: {
    type: String,
    required: true,
    unique: true,
    lowercase: true,
    trim: true,
    match: [
      /^\w+([\.-]?\w+)@\w+([\.-]?\w+)(\.\w{2,3})+$/,
      "Please fill a valid email address",
    ],
  },
  saved: {
    type: String,
    trim: true,
  },
});

const refreshTokenSchema = new mongoose.Schema({
  token: {
    type: String,
    required: true,
    unique: true,
  },
  user: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "User",
    required: true,
  },
  expiresAt: {
    type: Date,
    required: true,
    index: { expires: 432000 }, // Adjust expiration time as needed
  },
});




const RestaurantSchema = new mongoose.Schema({
  name: {
      type: String,
      required: true,
  },
  address: {
      type: String,
      required: true,
  },
  place_id:{
  },
  geometry: {
      location: {
          lat: { type: Number, required: true },
          lng: { type: Number, required: true },
      },
      viewport: {
          northeast: {
              lat: Number,
              lng: Number,
          },
          southwest: {
              lat: Number,
              lng: Number,
          }
      }
  },
  phone_number: String,
  website: String,
  opening_hours: {
      open_now: Boolean,
      periods: [
          {
              close: {
                  day: Number,
                  time: String,
              },
              open: {
                  day: Number,
                  time: String,
              },
          },
      ],
      weekday_text: [String],
  },
  rating: Number,
  user_ratings_total: Number,
  reviews: [
      {
          author_name: String,
          author_url: String,
          language: String,
          original_language: String,
          profile_photo_url: String,
          rating: Number,
          relative_time_description: String,
          text: String,
          time: { 
            type: Date, 
            default: Date.now },
      },
  ],
  types: [String],
  photos: [
      {
          photo_reference: String,
          width: Number,
          height: Number,
          html_attributions: [String],
      },
  ],
}, {
  timestamps: true,
});


export const Restaurant = mongoose.model('Restaurant', RestaurantSchema);




export const User = mongoose.model("details", collection);
export const RefreashToken = mongoose.model(
  "RefreashToken",
  refreshTokenSchema
);

