import mongoose, { Schema,model, mongo} from "mongoose";

<<<<<<< HEAD
const collection = mongoose.Schema({
  username: {
    type: mongoose.Schema.Types.String,
    required: true,
    unique: true,
  },
  password: {
    type: String,
    required: true,
  },
  email: {
    type: String,
    required: true,
    unique: true,
    lowercase: true,
    trim: true,
    match: [
      /^\w+([\.-]?\w+)@\w+([\.-]?\w+)(\.\w{2,3})+$/,
      "Please fill a valid email address",
    ],
  },
  saved: {
    type: String,
    trim: true,
  },
=======
const collection=mongoose.Schema({
    username:{
        type:mongoose.Schema.Types.String,
        required:true,
        unique:true,
    },
    password:{
        type:String,
        required:true,
    },
    email:{
        type:String,
        required:true,
        unique:true,
        lowercase:true,
        trim:true,
        match: [/^\w+([\.-]?\w+)@\w+([\.-]?\w+)(\.\w{2,3})+$/, 'Please fill a valid email address']
    },
    saved:{
        type:String,
        trim:true
    },
    pfp_directory:{
        unique:false,
        type:String,
    }
});

const refreshTokenSchema = new mongoose.Schema({
    token: {
      type: String,
      required: true,
      unique: true,
    },
    user: {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'User',
      required: true,
    },
    expiresAt: {
      type: Date,
      required: true,
      index: { expires: 432000 } // Adjust expiration time as needed
    },
  });
export const User=mongoose.model('details',collection);
export const RefreashToken=mongoose.model('RefreashToken',refreshTokenSchema);